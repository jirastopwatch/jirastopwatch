---

name: "Build"
run-name: "Build"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

env:
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    runs-on: windows-latest
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        dotnet-version:
          - 3.1.x
          - 6.0.x

    env:
      CONFIGURATION: '${{ matrix.configuration }}'
      SOLUTION_NAME: 'StopWatch.sln'
      SETTINGS_FILE: '.runsettings'
      TEST_LOGGER: 'trx;logfilename=testResults.trx'

    steps:
      - id: checkout
        name: "Checkout"
        uses: actions/checkout@v5

      - id: setup-dotnet
        name: "Setup Dotnet"
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - id: dotnet-restore
        name: "Dotnet Restore"
        run: dotnet restore "$env:SOLUTION_NAME"

      - id: nuget-restore
        name: "Nuget Restore"
        run: nuget restore "$env:SOLUTION_NAME"

      - id: build
        name: "Build"
        run: dotnet build --configuration "$env:CONFIGURATION" --no-restore "$env:SOLUTION_NAME"

      - id: test
        name: "Test"
        run: dotnet test --configuration "$env:CONFIGURATION" --no-restore --no-build --settings "$env:SETTINGS_FILE" --logger "$env:TEST_LOGGER" --logger "console;verbosity=detailed" "$env:SOLUTION_NAME"

      - id: upload-test-artifact
        if: always() && !contains(fromJSON('["cancelled", "skipped"]'), steps.test.outcome)
        name: "Archive Test Results"
        uses: actions/upload-artifact@v5
        with:
          name: test-results-${{ join(matrix.*, '-') }}
          path: '**/*.trx'
          if-no-files-found: error

  publish-test-results:
    if: always() && !contains(fromJSON('["cancelled", "skipped"]'), needs.build.result)
    name: "Publish Tests Results"
    needs: build
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read

    steps:
      - id: download-test-artifact
        name: "Download Test Results"
        uses: actions/download-artifact@v5
        with:
          pattern: 'test-results-*'
          path: 'test-results'

      - id: publish-test-results
        name: "Publish Test Results"
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          action_fail: true
          time_unit: milliseconds
          files: "test-results/**/*.trx"
